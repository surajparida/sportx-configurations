spring:
  # This is local config yml.
  ## IMP: sequence: local-yml/cloud-config.yml > profile-yml > bootstrap-yml
  #  config:
  #    name: local-audit
  #    location: /Users/suraj.parida/MMP/Architecture/Sportx/config-local/audit/local-audit.yml

  cloud:
    #    bootstrap:
    #      enabled: true:
    #      name: bootstrap              # Name something else
    #      location: /custom/location   # Change location of bootstrap.yml
    discovery:
      enabled: true                 #To disable the Eureka Discovery Client

    config:
      enabled: true
      failFast: true
      discovery:
        enabled: true
        serviceId: config

          #https://codecentric.github.io/spring-boot-admin/current/#spring-boot-admin-client
          #Direct Admin Registration: These configurations are required when there is no eureka.
          #boot:
          #admin:
          #metatdata-tags: auditservice, eventdriven   #TO CHECK
          #client:
          #Admin url/credentials
          #url: http://localhost:6010
          #password: admin
          #username: admin

          #period:                           # Interval for repeating the registration (in ms).

          #connect-timeout:                  # Connect timeout for the registration (in ms).

          #read-timeout:                     # Read timeout for the registration (in ms).

          #auto-registration:                # TRUE: If set to true the periodic task to register the application is
          # automatically scheduled after the application is ready.

          #auto-deregistration:              # Switch to enable auto-deregistration at Spring Boot Admin server when
          # context is closed. If the value is unset the feature is active if a running
          # CloudPlatform was detected.

          #register-once:                    # TRUE: If set to true the client will only register against one admin server
          # (in order defined by spring.boot.admin.instance.url); if that admin server
          # goes down, will automatically register against the next admin server.
          # If false, will register against all admin servers.

          #instance:
          #name: AUDIT-DIRECT              # Admin > List (as custom name)
          #health-url:                     # Depends on: management-url and endpoints.health.id.
          #management-base-url:            # Depends on: management.port, service-url and server.servlet-path
          #management-url:                 # Depends on: management-base-url and management.context-path
          #service-base-url:               # Depends on: hostname, server.port.
          #service-url:                    # Depends on: service-base-url and server.context-path.
          #prefer-ip:                      # Use the ip-address rather then the hostname in the guessed urls. If server.address / management.address is set, it get used.
          #metadata:
          #To allow Admin to access this service
          #user:
          #name: ${spring.security.user.name}
          #password: ${spring.security.user.password}
          #tags:
        #environment: audit-ind-01   #Admin > Details > Metadata (Label) > as tags.environment
